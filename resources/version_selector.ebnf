@@grammar :: Selector

start = expression $ ;

version = /[a-zA-Z0-9-*_\.@\+]+/ ;

and_op
    =
    | ','
    | '&&'
    | '&'
    | 'and'
    | 'but'
    ;

or_op
    =
    | '||'
    | '|'
    | 'or'
    ;

comb_op
    =
    | or_op
    | and_op
    ;

binary_op
    =
    | '!'
    | 'not'
    ;

version_op
    =
    | greater_than_equals_op
    | greater_than_op
    | less_than_equals_op
    | less_than_op
    | about_op
    | exact_op
    ;

exact_op
    =
    | '=='
    | '='
    | 'exact'
    | 'is'
    ;

about_op
    =
    | '~'
    | 'about'
    | 'abt'
    | '^'
    ;

greater_than_equals_op
    =
    | '>='
    | 'greater' 'than' [ 'or' ] 'equals'
    | 'gte'
    ;

less_than_equals_op
    =
    | '<='
    | 'less' 'than' [ 'or' ] 'equals'
    | 'lte'
    ;

greater_than_op
    =
    | '>'
    | 'greater' 'than'
    | 'gt'
    ;

less_than_op
    =
    | '<'
    | 'less' 'than'
    | 'lt'
    ;

range_op
    =
    | 'between' version 'and' version
    | `between` version '..' version
    | ( 'from' | `from` ) version ( 'to' | '-' | '...' ) version
    ;

any_op
    =
    | '*'
    | 'any'
    ;

expression
    =
    | union
    | selector
    ;

union = left:selector mid:( comb_op | `"&"` ) right:expression ;

version_selector = ( version_op | `"="` ) version ;

invert = binary_op selector ;

selector
    =
    | any_op
    | range_op
    | invert
    | '(' @:expression ')'
    | version_selector
    ;