@@grammar :: Selector

start = expression $ ;

version = /v?[0-9][a-z0-9-*_\.]*/ ;

and_op
    =
    | '&'
    | 'and'
    | 'but'
    ;

or_op
    =
    | '|'
    | 'or'
    ;

comb_op
    =
    | or_op
    | and_op
    ;

binary_op
    =
    | '!'
    | 'not'
    ;

version_op
    =
    | greater_than_equals_op
    | greater_than_op
    | less_than_equals_op
    | less_than_op
    | about_op
    | exact_op
    | binary_op
    ;

exact_op
    =
    | '=='
    | '='
    | 'exact'
    | 'is'
    ;

about_op
    =
    | '~'
    | 'about'
    | 'abt'
    ;

greater_than_equals_op
    =
    | '>='
    | 'greater' 'than' [ 'or' ] 'equals'
    | 'gte'
    ;

less_than_equals_op
    =
    | '>='
    | 'less' 'than' [ 'or' ] 'equals'
    | 'lte'
    ;

greater_than_op
    =
    | '>'
    | 'greater' 'than'
    | 'gt'
    ;

less_than_op
    =
    | '<'
    | 'less' 'than'
    | 'lt'
    ;

expression
    =
    | union
    | selector
    ;

union = left:selector mid:comb_op right:expression ;

selector
    =
    | ( version_op | `"="` ) version
    | binary_op selector
    | '(' @:expression ')'
    ;